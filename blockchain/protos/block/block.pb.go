// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block.proto

package block

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Block struct {
	Header               *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data                 *BlockData   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e550b1f5926e92d, []int{0}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetData() *BlockData {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlockHeader struct {
	Version              uint64   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevBlockHash        []byte   `protobuf:"bytes,3,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	Hash                 []byte   `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e550b1f5926e92d, []int{1}
}

func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (m *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(m, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHeader) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeader) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *BlockHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockData struct {
	Data                 [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockData) Reset()         { *m = BlockData{} }
func (m *BlockData) String() string { return proto.CompactTextString(m) }
func (*BlockData) ProtoMessage()    {}
func (*BlockData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e550b1f5926e92d, []int{2}
}

func (m *BlockData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockData.Unmarshal(m, b)
}
func (m *BlockData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockData.Marshal(b, m, deterministic)
}
func (m *BlockData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockData.Merge(m, src)
}
func (m *BlockData) XXX_Size() int {
	return xxx_messageInfo_BlockData.Size(m)
}
func (m *BlockData) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockData.DiscardUnknown(m)
}

var xxx_messageInfo_BlockData proto.InternalMessageInfo

func (m *BlockData) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "block.Block")
	proto.RegisterType((*BlockHeader)(nil), "block.BlockHeader")
	proto.RegisterType((*BlockData)(nil), "block.BlockData")
}

func init() { proto.RegisterFile("block.proto", fileDescriptor_8e550b1f5926e92d) }

var fileDescriptor_8e550b1f5926e92d = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x3f, 0x4f, 0xc4, 0x30,
	0x0c, 0xc5, 0x09, 0xcd, 0x1d, 0x9c, 0x5b, 0x24, 0xe4, 0x29, 0x42, 0x48, 0x54, 0xd1, 0x0d, 0x15,
	0x42, 0x1d, 0xca, 0xca, 0x84, 0x18, 0x58, 0x60, 0xc8, 0xc6, 0xe8, 0xd2, 0x88, 0x56, 0xd0, 0xa6,
	0x4a, 0xa3, 0x32, 0xf2, 0xd5, 0x51, 0x5c, 0xfe, 0x14, 0xb1, 0x3d, 0xbf, 0xf7, 0x8b, 0x63, 0x1b,
	0xd2, 0xfa, 0xcd, 0x3d, 0xbf, 0x96, 0xa3, 0x77, 0xc1, 0xe1, 0x86, 0x0b, 0xfd, 0x04, 0x9b, 0xdb,
	0x28, 0xf0, 0x12, 0xb6, 0xad, 0xa5, 0xc6, 0x7a, 0x25, 0x72, 0x51, 0xa4, 0x15, 0x96, 0x0b, 0xcd,
	0xe9, 0x3d, 0x27, 0xe6, 0x8b, 0xc0, 0x3d, 0xc8, 0x86, 0x02, 0xa9, 0x43, 0x26, 0x4f, 0xd7, 0xe4,
	0x1d, 0x05, 0x32, 0x9c, 0xea, 0x0f, 0x48, 0x57, 0x8f, 0x51, 0xc1, 0xd1, 0x6c, 0xfd, 0xd4, 0xb9,
	0x81, 0x7f, 0x90, 0xe6, 0xbb, 0xc4, 0x73, 0xd8, 0x85, 0xae, 0xb7, 0x53, 0xa0, 0x7e, 0xe4, 0x9e,
	0x89, 0xf9, 0x35, 0x70, 0x0f, 0x27, 0xa3, 0xb7, 0xf3, 0xd2, 0x8a, 0xa6, 0x56, 0x25, 0xb9, 0x28,
	0x32, 0xf3, 0xd7, 0x44, 0x04, 0xc9, 0xa1, 0xe4, 0x90, 0xb5, 0xbe, 0x80, 0xdd, 0xcf, 0x4c, 0x11,
	0xe0, 0x99, 0x45, 0x9e, 0x44, 0x20, 0xea, 0xea, 0x06, 0x32, 0x06, 0x1e, 0x68, 0xa0, 0x17, 0xeb,
	0xf1, 0x0a, 0x8e, 0x1f, 0xed, 0xfb, 0x72, 0x8f, 0x7f, 0x5b, 0x9d, 0x65, 0x6b, 0x47, 0x1f, 0xd4,
	0x5b, 0x3e, 0xe4, 0xf5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x34, 0xa9, 0x57, 0x57, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockManagerClient is the client API for BlockManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockManagerClient interface {
	NewBlock(ctx context.Context, in *BlockData, opts ...grpc.CallOption) (*Block, error)
}

type blockManagerClient struct {
	cc *grpc.ClientConn
}

func NewBlockManagerClient(cc *grpc.ClientConn) BlockManagerClient {
	return &blockManagerClient{cc}
}

func (c *blockManagerClient) NewBlock(ctx context.Context, in *BlockData, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/block.BlockManager/NewBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockManagerServer is the server API for BlockManager service.
type BlockManagerServer interface {
	NewBlock(context.Context, *BlockData) (*Block, error)
}

// UnimplementedBlockManagerServer can be embedded to have forward compatible implementations.
type UnimplementedBlockManagerServer struct {
}

func (*UnimplementedBlockManagerServer) NewBlock(ctx context.Context, req *BlockData) (*Block, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBlock not implemented")
}

func RegisterBlockManagerServer(s *grpc.Server, srv BlockManagerServer) {
	s.RegisterService(&_BlockManager_serviceDesc, srv)
}

func _BlockManager_NewBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockManagerServer).NewBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block.BlockManager/NewBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockManagerServer).NewBlock(ctx, req.(*BlockData))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "block.BlockManager",
	HandlerType: (*BlockManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewBlock",
			Handler:    _BlockManager_NewBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "block.proto",
}
